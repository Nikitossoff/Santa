# -*- coding: utf-8 -*-
import telebot
from telebot import types
import random
import sqlite3
import secrets
import string
import psutil
import time
import os
import requests
import text
from datetime import  datetime
import re
def main():
    while True:
        if True:
            bot = telebot.TeleBot('6730404345:AAFDzd2dNczarAiz40S7bXlAMF-qX9QSrp4')
            @bot.message_handler(commands=["start", "room"])
            def start(message, res=False):
                idtg = str(message.from_user.id)
                db = sqlite3.connect("base.db")
                c  = db.cursor()
                if "/room" in message.text:
                    try:
                        bot.delete_message(idtg, message.message_id)
                        try:
                            bot.delete_message(idtg, int(message.message_id)-1,2)
                        except:
                            pass
                    except:
                            pass
                    text.admin(bot, message=message)
                if message.text == "/start":
                    try:
                        bot.delete_message(idtg, message.message_id-1)
                        bot.delete_message(idtg, message.message_id-2)
                        bot.delete_message(idtg, message.message_id-3)
                        bot.delete_message(idtg, message.message_id-4)
                    except: 
                        pass
                    c.execute("""SELECT * FROM users WHERE idtg= ?""", [idtg])
                    if c.fetchone() == None:
                        markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                        btn1 = types.KeyboardButton("")
                        markup.add(btn1)
                        file = open("hello.jpg", "rb")
                        c.execute(f"INSERT INTO users VALUES (?,?,?)",(idtg, message.from_user.username, "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æüëΩ"))
                        db.commit()
                        bot.send_sticker(idtg, 'CAACAgIAAxkBAAJlBWVvZFJawM0Ql_mcD7790kwJ4yAUAAICEwACKZNgSSrrCEqnzUAfMwQ')
                        bot.send_photo(idtg, file, f'''
–ü—Ä–∏–≤–µ—Ç!‚ùÑÔ∏è
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É <u>"–¢–∞–π–Ω—ã–π —Å–∞–Ω—Ç–∞"</u>!üéÖ 
–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π –ø—Ä–∞–∑–¥–Ω–∏–∫ –≤ –ø—Ä–µ–¥–≤–µ—Ä–∏–∏ –ù–æ–≤–æ–≥–æ –ì–æ–¥–∞!ü•≥ 
–ù—É —á—Ç–æ –¥–∞–≤–∞–π —Ä–∞—Å—Å–∫–∞–∂—É –∫–∞–∫ –∏–≥—Ä–∞—Ç—å –≤ –¢–∞–π–Ω–æ–≥–æ –°–∞–Ω—Ç—É...üéÅ
                        ''', parse_mode='HTML')
                        time.sleep(1)
                        markup = types.InlineKeyboardMarkup(row_width = 1)
                        btn1 = types.InlineKeyboardButton(text="–í –º–µ–Ω—éüëå", callback_data=f"menu")
                        markup.add(btn1)
                        bot.send_message(idtg, f'''
"–¢–∞–π–Ω—ã–π –°–∞–Ω—Ç–∞" - —ç—Ç–æ –∏–≥—Ä–∞ —Å –∞–Ω–æ–Ω–∏–º–Ω—ã–º –¥–∞—Ä–µ–Ω–∏–µ–º –ø–æ—Ä—è–¥–∫–æ–≤, –≤ –∫–æ—Ç–æ—Ä–æ–π –¥–∞—Ä–∏—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è —Ç–∞–∫–∂–µ –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º –ø–æ–¥–∞—Ä–∫–∞. 
üéÖ > üéÅ > üéÖ > üéÅ > üéÖ
–û–Ω–∞ –∏–≥—Ä–∞–µ—Ç—å—Å—è –∫–∞–∫ –≤ –Ω–µ–±–æ–ª—å—à–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ –¥–æ 5 —á–µ–ª–æ–≤–µ–∫, —Ç–∞–∫ –∏ –≤ –±–æ–ª—å—à–æ–º –¥—Ä—É–∂–Ω–æ–º –∫–ª–∞—Å—Å–µ!
–ù–æ –¥—É–º–∞—é —Ç—ã —Ä–∞–∑–±–µ—Ä—ë—à—å—Å—è! –ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüòâ
                        ''', reply_markup=markup, parse_mode='HTML')
                    else:
                        markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
                        btn1 = types.KeyboardButton("–ù–∞–π—Ç–∏ –∫–æ–º–Ω–∞—Ç—Éüîé")
                        btn2 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—ÉüéÖ")
                        markup.add(btn1, btn2)
                        btn3 = types.KeyboardButton("–ú–æ–∏ –∫–æ–º–Ω–∞—Ç—ãüë®‚Äçüë®‚Äçüë¶‚Äçüë¶")
                        markup.add(btn3)
                        bot.send_message(idtg, f'''
–ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é‚ùÑ
                        ''', reply_markup=markup, parse_mode='HTML')
            @bot.message_handler(content_types=['text'])
            def menu(message):
                idtg = str(message.from_user.id)
                db = sqlite3.connect("base.db")
                c  = db.cursor()
                if message.text == "–ù–∞–π—Ç–∏ –∫–æ–º–Ω–∞—Ç—Éüîé":
                    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
                    btn1 = types.KeyboardButton("–í –º–µ–Ω—éüëà")
                    markup.add(btn1)
                    bot.send_message(idtg, f'''
üîé–í–≤–µ–¥–∏ –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:
                    ''', reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, find)
                if message.text == "–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—ÉüéÖ":
                    abc = "QWERTYUIOPASDFGHJKLZXCVBNM1234567890"
                    room = ""
                    for a in range(1, 6):
                        b = abc[random.randint(0, len(abc)-1)]
                        room += b
                    c.execute(f"INSERT INTO rooms VALUES (?,?,?,?)",(room, "–ò–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æüò¢", "–ë—é–¥–∂–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ωüò≠", idtg))
                    db.commit()
                    c.execute(f'''CREATE TABLE room{room} (
                    idtg    TEXT,
                    name    TEXT,
                    dopname TEXT,
                    present TEXT,
                    give    TEXT
                    );''')
                    db.commit()
                    markup = types.InlineKeyboardMarkup(row_width = 1)
                    btn1 = types.InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É‚öô", callback_data=f"room {room}")
                    btn2 = types.InlineKeyboardButton(text="–í –º–µ–Ω—éüëà", callback_data=f"menu")
                    markup.add(btn1, btn2)
                    bot.send_message(idtg, f'''
–ö–æ–º–Ω–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!üéÑ
–°–º–æ—Ç—Ä–µ—Ç—å –∑–∞ —Å–≤–æ–∏–º–∏ –∫–æ–º–Ω–∞—Ç–∞–º–∏ –º–æ–∂–Ω–æ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
                    ''', reply_markup=markup, parse_mode='HTML')
                    bot.register_next_step_handler(message, find)
            @bot.callback_query_handler(func=lambda call: True)
            def call_menu(call):
                idtg = str(call.message.chat.id)
                db = sqlite3.connect("base.db")
                c = db.cursor()
                if "menu" in call.data:
                    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
                    btn1 = types.KeyboardButton("–ù–∞–π—Ç–∏ –∫–æ–º–Ω–∞—Ç—Éüîé")
                    btn2 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—ÉüéÖ")
                    markup.add(btn1, btn2)
                    btn3 = types.KeyboardButton("–ú–æ–∏ –∫–æ–º–Ω–∞—Ç—ãüë®‚Äçüë®‚Äçüë¶‚Äçüë¶")
                    markup.add(btn3)
                    bot.send_message(idtg, f'''
–ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é‚ùÑ
                    ''', reply_markup=markup, parse_mode='HTML')




            def find(message):
                idtg = str(message.from_user.id)
                db = sqlite3.connect("base.db")
                c  = db.cursor()
                if message.text == "–í –º–µ–Ω—éüëà":
                    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
                    btn1 = types.KeyboardButton("–ù–∞–π—Ç–∏ –∫–æ–º–Ω–∞—Ç—Éüîé")
                    btn2 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—ÉüéÖ")
                    markup.add(btn1, btn2)
                    btn3 = types.KeyboardButton("–ú–æ–∏ –∫–æ–º–Ω–∞—Ç—ãüë®‚Äçüë®‚Äçüë¶‚Äçüë¶")
                    markup.add(btn3)
                    bot.send_message(idtg, f'''
–ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é‚ùÑ
                    ''', reply_markup=markup, parse_mode='HTML')
                else:
                    pass
            bot.infinity_polling()
        else:
            print("–ü—Ä–æ–∏–∑—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–¥")
main()